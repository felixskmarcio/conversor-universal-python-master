{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes modified code for potential improvements including code smells, design patterns, and best practices. Generates suggestions for improving code quality while maintaining existing functionality.",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": [
      "backend/**/*.py",
      "src/**/*.ts",
      "src/**/*.tsx",
      "src/**/*.js",
      "src/**/*.jsx",
      "*.py",
      "*.ts",
      "*.tsx",
      "*.js",
      "*.jsx"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code in the changed files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long methods, duplicate code, complex conditionals, and other maintainability issues\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check adherence to language-specific best practices (Python PEP 8, TypeScript/React conventions)\n4. **Performance**: Identify potential performance optimizations without changing functionality\n5. **Readability**: Suggest improvements for variable naming, function structure, and code organization\n6. **Security**: Flag potential security vulnerabilities or unsafe practices\n7. **Type Safety**: For TypeScript files, ensure proper typing and suggest improvements\n\nProvide specific, actionable suggestions with code examples where helpful. Maintain the existing functionality while improving code quality, maintainability, and performance. Consider the full-stack architecture (Flask backend, Next.js frontend) and suggest improvements that align with the project's patterns and conventions."
  }
}